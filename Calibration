import numpy as np
import cv2 as cv
import glob
import numpy as np


with open('	config.txt') as conf:
	h = int(conf.readline())
	w = int(conf.readline())
	path = conf.readline()
print(h, w, path)

criteria = (cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER, 30, 0.001)
 
objp = np.zeros((3*4,3), np.float32)
objp[:,:2] = np.mgrid[0:3,0:4].T.reshape(-1,2)
 
objpoints = [] # 3d points
imgpoints = [] # 2d points
 
images = glob.glob(path + '/*.jpg')

for fname in images:
	img = cv.imread(fname)
	gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
 
	ret, corners = cv.findChessboardCorners(gray, (3,4), None)
 
	if ret == True:
		objpoints.append(objp)
 
		corners2 = cv.cornerSubPix(gray,corners, (11,11), (-1,-1), criteria)
		imgpoints.append(corners2)
		
		cv.drawChessboardCorners(img, (3,4), corners2, ret)
		cv.imshow('img', img)
		cv.waitKey(500)

cv.destroyAllWindows()

ret, mtx, dist, rvecs, tvecs = cv.calibrateCamera(objpoints, imgpoints, (h, w), None, None)

print("ret : \n")
print(ret)

print("Camera matrix : \n")
print(mtx)
print("dist : \n")
print(dist)
print("rvecs : \n")
print(rvecs)
print("tvecs : \n")
print(tvecs)

np_mtx = np.asarray(mtx)
np_dist = np.asarray(dist)
np_rvecs = np.asarray(rvecs)
np_tvecs = np.asarray(tvecs)

np.savez('calib.npz', np_mtx=np_mtx, np_dist=np_dist, np_rvecs=np_rvecs, np_tvecs=np_tvecs)
